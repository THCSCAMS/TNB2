--[=[
$$\      $$\  $$$$$$\  $$$$$$$\  $$\   $$\  $$$$$$\  
$$$\    $$$ |$$  __$$\ $$  __$$\ $$ |  $$ |$$  __$$\ 
$$$$\  $$$$ |$$ /  \__|$$ |  $$ |\$$\ $$  |$$ /  \__|
$$\$$\$$ $$ |\$$$$$$\  $$$$$$$  | \$$$$  / $$$$$$$\  
$$ \$$$  $$ | \____$$\ $$  __$$<  $$  $$<  $$  __$$\ 
$$ |\$  /$$ |$$\   $$ |$$ |  $$ |$$  /\$$\ $$ /  $$ |
$$ | \_/ $$ |\$$$$$$  |$$ |  $$ |$$ /  $$ | $$$$$$  |
\__|     \__| \______/ \__|  \__|\__|  \__| \______/                                                     
]=]

local version = "1.0.0a Beta"

local UI = script.Parent
local KSYS = UI.KeySystem
local LSYS = UI.Loading
local LIBRARY = UI.Library
local playerUser = game.Players.LocalPlayer.UserId

local UBOX = KSYS.User
local KBOX = KSYS.Key
local LOGIN = KSYS.LoginButton

local LTEXT = LSYS.LoadingText

local cfgPath = "KEYSYSTEM/USEDKEY.cfg"

local predefinedKeys = {
	[1280700272] = "REALCYYISABITCHASSNIGGA",
	[417784003] = "CUMSLAYER422",
	[0] = "1",
	[21312313] = "1"
}

local usedKeys = {}

if isfile(cfgPath) then
	local keyData = readfile(cfgPath)
	usedKeys = game:GetService("HttpService"):JSONDecode(keyData)
else
	usedKeys = {}
	writefile(cfgPath, game:GetService("HttpService"):JSONEncode(usedKeys))
end

if not isfolder("KEYSYSTEM") then
	makefolder("KEYSYSTEM")
end

local function validateKey(playerUserId, key)
	if predefinedKeys[playerUserId] == key then
		usedKeys[playerUserId] = key
		writefile(cfgPath, game:GetService("HttpService"):JSONEncode(usedKeys))
		return true, "Key accepted for " .. playerUserId
	else
		return false, "Invalid key."
	end
end

local function makeDraggable(frame)
	local dragging, dragInput, mousePos, framePos
	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			mousePos = input.Position
			framePos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	frame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement then
			dragInput = input
		end
	end)
	game:GetService("UserInputService").InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			local delta = input.Position - mousePos
			frame.Position = UDim2.new(
				framePos.X.Scale,
				framePos.X.Offset + delta.X,
				framePos.Y.Scale,
				framePos.Y.Offset + delta.Y
			)
		end
	end)
end

makeDraggable(KSYS)
makeDraggable(LSYS)
makeDraggable(LIBRARY)

LOGIN.MouseButton1Click:Connect(function()
	local enteredUser = UBOX.Text
	local enteredPass = KBOX.Text

	local isValid, message = validateKey(playerUser, enteredPass)

	if isValid then
		KSYS.Visible = false
		LSYS.Visible = true
		LTEXT.Text = "LOADING"
		wait(2)
		LTEXT.Text = "WELCOME, " .. playerUser
		wait(2)
		LTEXT.Text = "FUCK REALCY IS A BITCH"
		wait(5)
		LSYS.Visible = false
		LIBRARY.Visible = true
	else
		UBOX.TextColor3 = Color3.fromRGB(255, 0, 0)
		KBOX.TextColor3 = Color3.fromRGB(255, 0, 0)
		wait(1)
		UBOX.TextColor3 = Color3.fromRGB(255, 255, 255)
		KBOX.TextColor3 = Color3.fromRGB(255, 255, 255)
	end
end)

local LUI = UI.Library
local OFFB = LUI.OFFButton
local ONB = UI.OnButton
local HP = LUI.HomePage
local OP = LUI.OtherPage
local FarmP = LUI.FarmPage
local NPCP = LUI.NPCPage
local TPP = LUI.TPPage
local ESP = LUI.ESPPage

local OB = LUI.OtherButton
local HPB = LUI.HomeButton
local FarmB = LUI.FarmButton
local NPCB = LUI.NPCButton
local TPB = LUI.TeleportButton
local ESPB = LUI.ESPButton

local Pages = {
	[HPB] = HP,
	[OB] = OP,
	[FarmB] = FarmP,
	[NPCB] = NPCP,
	[TPB] = TPP,
	[ESPB] = ESP
}

local ToggleButtons = {
	DistanceESP = NPCP.DistanceESP.ImageButton,
	TweenToNitty = NPCP.TweenTD.ImageButton,
}

local ButtonsN = {
	StoveTP = TPP.StoveTween,
	BoxTP = TPP.BoxTween,
	LaunderTP = TPP.LaunderTween
}

local ESPButtons = {}
local DistanceLabels = {}

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local function resetAll()
	for button, page in pairs(Pages) do
		if button.BackTab then
			button.BackTab.BackgroundTransparency = 1
		end
		page.Visible = false
	end
end

local function togglePage(button)
	local page = Pages[button]
	if not page then return end

	if page.Visible then
		if button.BackTab then
			button.BackTab.BackgroundTransparency = 1
		end
		page.Visible = false
	else
		resetAll()
		if button.BackTab then
			button.BackTab.BackgroundTransparency = 0.5
		end
		page.Visible = true
	end
end

local function toggleESPButtonImage(button)
	if button.Image == "rbxassetid://79976764380805" then
		button.Image = "rbxassetid://81729288184303"
	else
		button.Image = "rbxassetid://79976764380805"
	end
end

local DistanceLabels = {}


--// NPC PAGE 

local function toggleDistanceESP(enabled)
	if enabled then
		for _, nitty in ipairs(workspace.NokiaCallNPCs:GetChildren()) do
			if nitty.Name == "Nitty" and nitty:IsA("Model") and nitty:FindFirstChild("HumanoidRootPart") then
				if not nitty:FindFirstChildOfClass("BillboardGui") then
					local billboard = Instance.new("BillboardGui")
					billboard.Size = UDim2.new(0, 100, 0, 50)
					billboard.Adornee = nitty.HumanoidRootPart
					billboard.AlwaysOnTop = true
					billboard.Parent = nitty

					local textLabel = Instance.new("TextLabel")
					textLabel.Size = UDim2.new(1, 0, 1, 0)
					textLabel.BackgroundTransparency = 1
					textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
					textLabel.TextStrokeTransparency = 0
					textLabel.TextScaled = true
					textLabel.Font = Enum.Font.GothamBold
					textLabel.Text = "0 studs"
					textLabel.Parent = billboard

					table.insert(DistanceLabels, billboard)
				end
			end
		end

		local connection
		connection = game:GetService("RunService").RenderStepped:Connect(function()
			if not enabled then
				connection:Disconnect()
				return
			end

			for _, nitty in ipairs(workspace.NokiaCallNPCs:GetChildren()) do
				if nitty.Name == "Nitty" and nitty:IsA("Model") and nitty:FindFirstChild("HumanoidRootPart") then
					local distance = (humanoidRootPart.Position - nitty.HumanoidRootPart.Position).Magnitude
					local billboard = nitty:FindFirstChildOfClass("BillboardGui")
					if billboard and billboard:FindFirstChildOfClass("TextLabel") then
						billboard.TextLabel.Text = string.format("%.1f", distance) .. " studs"
					end
				end
			end
		end)
	else
		for _, billboard in ipairs(DistanceLabels) do
			if billboard and billboard.Parent then
				billboard:Destroy()
			end
		end
		DistanceLabels = {}
	end
end


local TweenService = game:GetService("TweenService")

local function toggleTeleportToNitty(enabled)
	if enabled then
		local closestNitty = nil
		local shortestDistance = math.huge

		for _, nitty in ipairs(workspace.NokiaCallNPCs:GetChildren()) do
			if nitty.Name == "Nitty" and nitty:IsA("Model") and nitty:FindFirstChild("HumanoidRootPart") then
				local distance = (humanoidRootPart.Position - nitty.HumanoidRootPart.Position).Magnitude
				if distance < shortestDistance then
					shortestDistance = distance
					closestNitty = nitty
				end
			end
		end

		if closestNitty then
			local underMapCFrame = humanoidRootPart.CFrame + Vector3.new(0, -25, 0)
			local tweenInfoUnderMap = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out) 
			local tweenGoalUnderMap = {CFrame = underMapCFrame}
			local tweenUnderMap = TweenService:Create(humanoidRootPart, tweenInfoUnderMap, tweenGoalUnderMap)
			tweenUnderMap:Play()

			tweenUnderMap.Completed:Wait()

			local targetCFrame = closestNitty.HumanoidRootPart.CFrame + Vector3.new(0, 2, 0)
			local tweenInfoToNitty = TweenInfo.new(20, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
			local tweenGoalToNitty = {CFrame = targetCFrame}
			local tweenToNitty = TweenService:Create(humanoidRootPart, tweenInfoToNitty, tweenGoalToNitty)
			tweenToNitty:Play()
		end
	end
end

--// TELEPORT PAGE

local TweenService = game:GetService("TweenService")

local function teleportToFarthestStove()
	local farthestStove = nil
	local longestDistance = 0

	for _, stove in ipairs(workspace.Stoves:GetChildren()) do
		if stove:IsA("BasePart") then
			local distance = (humanoidRootPart.Position - stove.Position).Magnitude
			if distance > longestDistance then
				longestDistance = distance
				farthestStove = stove
			end
		end
	end

	if farthestStove then
		local targetCFrame = farthestStove.CFrame + Vector3.new(0, 2, 0)
		local tweenInfoToStove = TweenInfo.new(20, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
		local tweenGoalToStove = {CFrame = targetCFrame}
		local tweenToStove = TweenService:Create(humanoidRootPart, tweenInfoToStove, tweenGoalToStove)
		tweenToStove:Play()
	end
end

ButtonsN.StoveTP.MouseButton1Click:Connect(function()
	teleportToFarthestStove()
end)

local TweenService = game:GetService("TweenService")

local function teleportToClosestCrate()
	local closestCrate = nil
	local shortestDistance = math.huge

	for _, crate in ipairs(workspace["Shelf Job"].CratePickups:GetChildren()) do
		if crate:IsA("BasePart") then
			local distance = (humanoidRootPart.Position - crate.Position).Magnitude
			if distance < shortestDistance then
				shortestDistance = distance
				closestCrate = crate
			end
		end
	end

	if closestCrate then
		local targetCFrame = closestCrate.CFrame + Vector3.new(0, 2, 0)
		local tweenInfoToCrate = TweenInfo.new(math.random(25, 35), Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
		local tweenGoalToCrate = {CFrame = targetCFrame}
		local tweenToCrate = TweenService:Create(humanoidRootPart, tweenInfoToCrate, tweenGoalToCrate)
		tweenToCrate:Play()
	end
end

ButtonsN.BoxTP.MouseButton1Click:Connect(function()
	teleportToClosestCrate()
end)

local TweenService = game:GetService("TweenService")

local function teleportToClosestLaunderNPC()
	local closestNPC = nil
	local shortestDistance = math.huge

	for _, npc in ipairs(workspace.LaunderNPCs:GetChildren()) do
		if npc:IsA("Model") and npc:FindFirstChild("HumanoidRootPart") then
			local distance = (humanoidRootPart.Position - npc.HumanoidRootPart.Position).Magnitude
			if distance < shortestDistance then
				shortestDistance = distance
				closestNPC = npc
			end
		end
	end

	if closestNPC then
		local targetCFrame = closestNPC.HumanoidRootPart.CFrame + Vector3.new(0, 2, 0)
		local tweenInfoToNPC = TweenInfo.new(math.random(20, 35), Enum.EasingStyle.Linear, Enum.EasingDirection.Out) 
		local tweenGoalToNPC = {CFrame = targetCFrame}
		local tweenToNPC = TweenService:Create(humanoidRootPart, tweenInfoToNPC, tweenGoalToNPC)
		tweenToNPC:Play()
	end
end

ButtonsN.LaunderTP.MouseButton1Click:Connect(function()
	teleportToClosestLaunderNPC()
end)


ToggleButtons.DistanceESP.MouseButton1Click:Connect(function()
	local enabled = ToggleButtons.DistanceESP.Image == "rbxassetid://79976764380805"
	toggleESPButtonImage(ToggleButtons.DistanceESP)
	toggleDistanceESP(enabled)
end)

ToggleButtons.TweenToNitty.MouseButton1Click:Connect(function()
	local enabled = ToggleButtons.TweenToNitty.Image == "rbxassetid://79976764380805"
	toggleESPButtonImage(ToggleButtons.TweenToNitty)
	toggleTeleportToNitty(enabled)
end)

--// PAGE BUTTONS

HPB.MouseButton1Click:Connect(function()
	togglePage(HPB)
end)

ESPB.MouseButton1Click:Connect(function()
	togglePage(ESPB)
end)

OB.MouseButton1Click:Connect(function()
	togglePage(OB)
end)

FarmB.MouseButton1Click:Connect(function()
	togglePage(FarmB)
end)

NPCB.MouseButton1Click:Connect(function()
	togglePage(NPCB)
end)

TPB.MouseButton1Click:Connect(function()
	togglePage(TPB)
end)

OFFB.MouseButton1Click:Connect(function()
	LUI.Visible = false
	ONB.Visible = true
end)

ONB.MouseButton1Click:Connect(function()
	LUI.Visible = true
	ONB.Visible = false
end)
